{"remainingRequest":"/Users/mike/Downloads/logoly-master/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/mike/Downloads/logoly-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mike/Downloads/logoly-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mike/Downloads/logoly-master/src/generator/Pornhub.vue?vue&type=template&id=79f3ac96&scoped=true&","dependencies":[{"path":"/Users/mike/Downloads/logoly-master/src/generator/Pornhub.vue","mtime":1602064122000},{"path":"/Users/mike/Downloads/logoly-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mike/Downloads/logoly-master/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/mike/Downloads/logoly-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mike/Downloads/logoly-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}